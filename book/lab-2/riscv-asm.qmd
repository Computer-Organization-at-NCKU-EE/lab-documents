# RISC-V Assembly Programming {#sec-riscv-asm}

::: {.callout-note}
Please refer to @riscv-asm-manual and @riscv-asm-book for more information.
:::

## Revision of RV32I Instructions

## Common Pesudo-Instructions

- Basic pseudo-instructions (`li`, `mv`, `nop`)
- Control flow pseudo-instructions (`call`, `ret`, `beqz`)
- How assembler expands pseudo-instructions

## Assembly Programming Basics

### Waht is Label?

### Addressing for Wide Immediates and Addresses

### If-Else Statement

### For-Loops

### While-Loops

### Switch-Case Statement

## Supporting Procedure in Hardware

### What is ABI, and Why does ABI matter?

### RISC-V ABI {#sec-riscv-abi}

::: {.callout-note}
Please refer to @riscv-abi-repo for more information about RISC-V ABI.
:::

### Supporting Procedure Calling

> introduce prologue and epilogue as well

#### Function Call Convention

#### Stack Allocation and Stack Pointer

#### Example Workaround For Using ABI

## Advanced Examples

- strlen
- array_sum
- recursion (factorial, fibonacci)

## C-Assembly Hrbrid Programming

> This is the best "show-case" for applying ABI.

- Calling C from assembly
- Calling assembly from C

## Fallacies and Pitfalls

